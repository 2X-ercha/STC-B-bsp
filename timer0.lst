C51 COMPILER V9.51   TIMER0                                                                10/14/2022 14:41:09 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE TIMER0
OBJECT MODULE PLACED IN .\dist\timer0.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\timer0.c OMF2 BROWSE DEBUG PRINT(.\timer0.lst) TABS(2) OBJECT(.\dist\ti
                    -mer0.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "callback.h"
   3          #include "timer0.h"
   4          #include "seg_led.h"
   5          #include "button.h"
   6          
   7          unsigned int timer_count = 0;
   8          unsigned char k1_press_flag = 0;
   9          unsigned char k2_press_flag = 0;
  10          unsigned char k1_press_timing = 0;
  11          unsigned char k2_press_timing = 0;
  12          unsigned char k1_release_flag = 0;
  13          unsigned char k2_release_flag = 0;
  14          unsigned char k1_release_timing = 0;
  15          unsigned char k2_release_timing = 0;
  16          
  17          void Timer0_Init(){
  18   1          // p498
  19   1          timer_count = 0;
  20   1          TR0 = 0;        // ÂÅúÊ≠¢timer0
  21   1          TMOD &= 0xF0;   // timer0 modeËÆæÁΩÆ‰∏∫(xxxx0000b, .3:0 ÊâìÂºÄÂÆöÊó∂/ËÆ°Êï∞Âô® .2:0 ÈÄâÊã©ÂÆöÊó∂Ê®°Âºè
             - .1-0:00 16‰ΩçËá™Âä®ÈáçË£ÖÂÆöÊó∂Âô®)
  22   1          AUXR &= 0x7F;   // ÂÆöÊó∂Âô®0Áî®‰º†Áªü8051ÈÄüÂ∫¶Ôºå12ÂàÜÈ¢ë
  23   1          TH0 = (Fosc_1ms & 0xff00) >> 8;  TL0 = Fosc_1ms & 0xff;     // ËÆæÁΩÆÂÆöÊó∂Âô®
  24   1          ET0 = EA = 1;   // ÂêØÁî®timer0‰∏≠Êñ≠
  25   1        PT0 = 1;    // ËÆæÁΩÆÈ´ò‰ºòÂÖàÁ∫ßÔºàÂú®C51‰∏≠timer0Êú¨Ë∫´‰ºòÂÖàÁ∫ß‰∏∫Á¨¨‰∫åÔºåËÆæ‰∏∫1Âü∫Êú¨‰∏äÊòØÊúÄÈ´ò‰∫ÜÔ
             -ºâ
  26   1          TF0 = 0;    // Ê∏ÖÈô§TF0Ê†áÂøó
  27   1        TR0 = 1;        // ÂêØÁî®timer0
  28   1      }
  29          
  30          void Timer0_Rountine() interrupt 1{
  31   1          if(P23 == 1)
  32   1              display_pos_next();
  33   1          segled_display();
  34   1          
  35   1          // Êó∂Èó¥ÂõûË∞É
  36   1          if(CallbackFor1ms != 0)CallbackFor1ms();   
  37   1          if(timer_count % 10 == 0 && CallbackFor10ms != 0){CallbackFor10ms();}
  38   1          if(timer_count % 100 == 0 && CallbackFor100ms != 0){CallbackFor100ms();}
  39   1          if(timer_count == 0 && CallbackFor1s != 0){CallbackFor1s();}
  40   1      
  41   1          // Êó∂Èó¥ÂõûË∞ÉËÆ°Êó∂flag
  42   1          timer_count ++;
  43   1          if(timer_count >= 1000)
  44   1              timer_count = 0;
  45   1      
  46   1          // ÊåâÈîÆÈò≤Êäñ
  47   1          if(k1_press_flag == 1){
  48   2              // k1Êåâ‰∏ã
  49   2              if(k1_press_timing < KEY_ANTISHAKE_MS) k1_press_timing++;
  50   2              else if(CallbackForKey1Press != 0 && P32 == enumKeyStatus_Press){
  51   3                  k1_press_flag = 0;
  52   3                  CallbackForKey1Press();
C51 COMPILER V9.51   TIMER0                                                                10/14/2022 14:41:09 PAGE 2   

  53   3              }
  54   2          }
  55   1          if(k1_release_flag == 1){
  56   2              // k1ÊùæÂºÄ
  57   2              if(k1_release_timing < KEY_ANTISHAKE_MS) k1_release_timing++;
  58   2              else if(CallbackForKey1Release != 0 && P32 == enumKeyStatus_Release){
  59   3                  k1_release_flag = 0;
  60   3                  CallbackForKey1Release();
  61   3              }
  62   2          }
  63   1          if(k2_press_flag == 1){
  64   2              // k2Êåâ‰∏ã
  65   2              if(k2_press_timing < KEY_ANTISHAKE_MS) k2_press_timing++;
  66   2              else if(CallbackForKey2Press != 0 && P33 == enumKeyStatus_Press){
  67   3                  k2_press_flag = 0;
  68   3                  CallbackForKey2Press();
  69   3              }
  70   2          }
  71   1          if(k2_release_flag == 1){
  72   2              // k2ÊùæÂºÄ
  73   2              if(k2_release_timing < KEY_ANTISHAKE_MS) k2_release_timing++;
  74   2              else if(CallbackForKey2Release != 0 && P33 == enumKeyStatus_Release){
  75   3                  k2_release_flag = 0;
  76   3                  CallbackForKey2Release();
  77   3              }
  78   2          }
  79   1      
  80   1          // TH0 = (Fosc_1ms & 0xff00) >> 8;  TL0 = Fosc_1ms & 0xff;     // ÈáçÁΩÆÂÆöÊó∂Âô®Ôºà16‰ΩçËá™Âä®ÈáçËΩΩ‰
             -∫ÜÔºå‰∏çÈúÄË¶Å ÊñáÊ°£P499
  81   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    365    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
